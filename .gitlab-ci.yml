default:
    image: golang:1.18

stages:
    - build
    - docker-build

build-api:
    stage: build
    cache:
        key: "$CI_COMMIT_REF_SLUG"
        paths:
            - vendor/
    script:
        - mkdir -p ./bin/api
        - go mod download
        - go mod vendor
        - GOARCH=amd64 GOOS=linux go build -ldflags="-s -w" -o bin/api/api_amd64 ./services/api
    artifacts:
        name: api
        paths:
            - bin/api
        expose_as: api
        untracked: false
        expire_in: 7 days

build-ws:
    stage: build
    cache:
        key: "$CI_COMMIT_REF_SLUG"
        paths:
            - vendor/
    script:
        - mkdir -p ./bin/ws
        - go mod download
        - go mod vendor
        - GOARCH=amd64 GOOS=linux go build -ldflags="-s -w" -o bin/ws/ws_amd64 ./services/ws
    artifacts:
        name: ws
        paths:
            - bin/ws
        expose_as: ws
        untracked: false
        expire_in: 7 days

build-discovery:
    stage: build
    cache:
        key: "$CI_COMMIT_REF_SLUG"
        paths:
            - vendor/
    script:
        - mkdir -p ./bin/discovery
        - go mod download
        - go mod vendor
        - GOARCH=amd64 GOOS=linux go build -ldflags="-s -w" -o bin/discovery/discovery_amd64 ./services/discovery
    artifacts:
        name: discovery
        paths:
            - bin/discovery
        expose_as: discovery
        untracked: false
        expire_in: 7 days

build-files:
    stage: build
    cache:
        key: "$CI_COMMIT_REF_SLUG"
        paths:
            - vendor/
    script:
        - mkdir -p ./bin/files
        - go mod download
        - go mod vendor
        - GOARCH=amd64 GOOS=linux go build -ldflags="-s -w" -o bin/files/files_amd64 ./services/discovery
    artifacts:
        name: files
        paths:
            - bin/files
        expose_as: files
        untracked: false
        expire_in: 7 days

docker_api:
    image: docker:latest
    stage: docker-build
    dependencies:
        - build-api
    services:
        - docker:dind
    before_script:
        - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY

    script:
        - mkdir ./.docker/api/bin -p
        - cp ./bin/api/api_amd64 ./.docker/api/bin/api
        - cd ./.docker/api/
        - docker build -t registry.gitlab.com/george/shoya-go/api:latest .
        - docker push registry.gitlab.com/george/shoya-go/api:latest

docker_discovery:
    image: docker:latest
    stage: docker-build
    dependencies:
        - build-discovery
    services:
        - docker:dind
    before_script:
        - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY

    script:
        - mkdir ./.docker/discovery/bin -p
        - cp ./bin/discovery/discovery_amd64 ./.docker/discovery/bin/discovery
        - cd ./.docker/discovery/
        - docker build -t registry.gitlab.com/george/shoya-go/discovery:latest .
        - docker push registry.gitlab.com/george/shoya-go/discovery:latest

docker_files:
    image: docker:latest
    stage: docker-build
    dependencies:
        - build-files
    services:
        - docker:dind
    before_script:
        - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY

    script:
        - mkdir ./.docker/files/bin -p
        - cp ./bin/files/files_amd64 ./.docker/files/bin/files
        - cd ./.docker/files/
        - docker build -t registry.gitlab.com/george/shoya-go/files:latest .
        - docker push registry.gitlab.com/george/shoya-go/files:latest